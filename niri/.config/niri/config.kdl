// This config is in the KDL format: https://kdl.dev
// https://github.com/YaLTeR/niri/wiki/Configuration:-Introduction

hotkey-overlay {
    skip-at-startup
}

// https://github.com/YaLTeR/niri/wiki/Configuration:-Input
input {
    keyboard {
        // For more information, see xkeyboard-config(7).
        xkb {
            layout "fr"
        }
        numlock
    }

    touchpad {
        tap
        natural-scroll
        accel-profile "flat"
    }

    mouse {
        accel-speed 0.0
        accel-profile "flat"
        scroll-factor 1
    }
}

// niri msg outputs
// https://github.com/YaLTeR/niri/wiki/Configuration:-Outputs
output "DP-1" {
    mode "3440x1440"
}

cursor {
    xcursor-theme "Adwaita"
    xcursor-size 24
}

// https://github.com/YaLTeR/niri/wiki/Configuration:-Layout
layout {
    gaps 6

    // You can customize the widths that "switch-preset-column-width" (Mod+R) toggles between.
    preset-column-widths {
        // Proportion sets the width as a fraction of the output width, taking gaps into account.
        // For example, you can perfectly fit four windows sized "proportion 0.25" on an output.
        // The default preset widths are 1/3, 1/2 and 2/3 of the output.
        proportion 0.33333
        proportion 0.5
        proportion 0.66667

        // Fixed sets the width in logical pixels exactly.
        // fixed 1920
    }

    // You can also customize the heights that "switch-preset-window-height" (Mod+Shift+R) toggles between.
    // preset-window-heights { }

    // You can change the default width of the new windows.
    default-column-width { proportion 0.5; }
    // If you leave the brackets empty, the windows themselves will decide their initial width.
    // default-column-width {}

    // By default focus ring and border are rendered as a solid background rectangle
    // behind windows. That is, they will show up through semitransparent windows.
    // This is because windows using client-side decorations can have an arbitrary shape.
    //
    // If you don't like that, you should uncomment `prefer-no-csd` below.
    // Niri will draw focus ring and border *around* windows that agree to omit their
    // client-side decorations.
    //
    // Alternatively, you can override it with a window rule called
    // `draw-border-with-background`.

    // You can change how the focus ring looks.
    focus-ring {
        width 1
        active-color "#ffc87f"
        inactive-color "#505050"
    }

    border {
        off
    }
}

spawn-at-startup "waybar"
spawn-at-startup "swaync"
spawn-at-startup "nm-applet" "--indicator"
spawn-at-startup "wl-paste" "--type" "text" "--watch" "cliphist" "store"
spawn-at-startup "wl-paste" "--type" "image" "--watch" "cliphist" "store"
spawn-at-startup "swaybg" "--image" "~/wallpapers/current" "--mode" "fill"

prefer-no-csd
screenshot-path null

// https://github.com/YaLTeR/niri/wiki/Configuration:-Window-Rules
window-rule {
    // Work around WezTerm's initial configure bug
    // by setting an empty default-column-width.
    match app-id=r#"^org\.wezfurlong\.wezterm$"#
    default-column-width {}
}

window-rule {
    // Open the Firefox picture-in-picture player as floating by default.
    match app-id=r#"firefox$"# title="^Picture-in-Picture$"
    open-floating true
}

// Example: block out two password managers from screen capture.
// (This example rule is commented out with a "/-" in front.)
/-window-rule {
    match app-id=r#"^org\.keepassxc\.KeePassXC$"#
    match app-id=r#"^org\.gnome\.World\.Secrets$"#

    block-out-from "screen-capture"

    // Use this instead if you want them visible on third-party screenshot tools.
    // block-out-from "screencast"
}

window-rule {
    geometry-corner-radius 6
    clip-to-geometry true
}

environment {
    ELECTRON_OZONE_PLATFORM_HINT "auto"
}

binds {
    Mod+Return { spawn "wezterm"; }
    Mod+M { spawn "fuzzel"; }
    Mod+Shift+V { spawn "sh" "-c" "cliphist list | fuzzel -d | cliphist decode | wl-copy"; }
    Mod+Shift+O { spawn "swaylock" "-f"; }
    Mod+Y { spawn "pkill" "-SIGUSR1" "waybar"; }
    Mod+N { spawn "swaync-client" "-t" "-sw"; }

    XF86AudioRaiseVolume { spawn "pactl" "set-sink-volume" "@DEFAULT_SINK@" "+10%"; }
    XF86AudioLowerVolume { spawn "pactl" "set-sink-volume" "@DEFAULT_SINK@" "-10%"; }
    XF86AudioMute        { spawn "pactl" "set-sink-mute" "@DEFAULT_SINK@" "toggle"; }
    Shift+XF86AudioMute  { spawn "pactl" "set-source-mute" "@DEFAULT_SOURCE@" "toggle"; }
    XF86AudioMicMute     { spawn "pactl" "set-source-mute" "@DEFAULT_SOURCE@" "toggle"; }

    Mod+O repeat=false { toggle-overview; }

    Mod+Shift+Q { close-window; }

    Mod+H     { focus-column-left; }
    Mod+J     { focus-window-down; }
    Mod+K     { focus-window-up; }
    Mod+L     { focus-column-right; }

    Mod+Shift+H     { move-column-left; }
    Mod+Shift+J     { move-window-down; }
    Mod+Shift+K     { move-window-up; }
    Mod+Shift+L     { move-column-right; }

    Mod+Home { focus-column-first; }
    Mod+End  { focus-column-last; }
    Mod+Ctrl+Home { move-column-to-first; }
    Mod+Ctrl+End  { move-column-to-last; }

    Mod+Ctrl+J { move-column-to-workspace-down; }
    Mod+Ctrl+K { move-column-to-workspace-up; }

    Mod+ampersand { focus-workspace 1; }
    Mod+eacute { focus-workspace 2; }
    Mod+quotedbl { focus-workspace 3; }
    Mod+apostrophe { focus-workspace 4; }
    Mod+parenleft { focus-workspace 5; }
    Mod+minus { focus-workspace 6; }
    Mod+egrave { focus-workspace 7; }
    Mod+underscore { focus-workspace 8; }
    Mod+ccedilla { focus-workspace 9; }

    Mod+Shift+ampersand { move-column-to-workspace 1; }
    Mod+Shift+eacute { move-column-to-workspace 2; }
    Mod+Shift+quotedbl { move-column-to-workspace 3; }
    Mod+Shift+apostrophe { move-column-to-workspace 4; }
    Mod+Shift+parenleft { move-column-to-workspace 5; }
    Mod+Shift+minus { move-column-to-workspace 6; }
    Mod+Shift+egrave { move-column-to-workspace 7; }
    Mod+Shift+underscore { move-column-to-workspace 8; }
    Mod+Shift+ccedilla { move-column-to-workspace 9; }

    // The following binds move the focused window in and out of a column.
    // If the window is alone, they will consume it into the nearby column to the side.
    // If the window is already in a column, they will expel it out.
    Mod+BracketLeft  { consume-or-expel-window-left; }
    Mod+BracketRight { consume-or-expel-window-right; }

    // Consume one window from the right to the bottom of the focused column.
    Mod+Comma { consume-window-into-column; }
    // Expel the bottom window from the focused column to the right.
    Mod+Shift+Comma { expel-window-from-column; }

    Mod+R { switch-preset-column-width; }
    Mod+Shift+R { switch-preset-window-height; }
    Mod+Ctrl+R { reset-window-height; }
    Mod+Z { maximize-column; }
    Mod+Shift+Z { fullscreen-window; }

    // Expand the focused column to space not taken up by other fully visible columns.
    // Makes the column "fill the rest of the space".
    Mod+Ctrl+F { expand-column-to-available-width; }

    Mod+C { center-column; }

    // Center all fully visible columns on screen.
    Mod+Ctrl+C { center-visible-columns; }

    // Finer width adjustments.
    // This command can also:
    // * set width in pixels: "1000"
    // * adjust width in pixels: "-5" or "+5"
    // * set width as a percentage of screen width: "25%"
    // * adjust width as a percentage of screen width: "-10%" or "+10%"
    // Pixel sizes use logical, or scaled, pixels. I.e. on an output with scale 2.0,
    // set-column-width "100" will make the column occupy 200 physical screen pixels.
    Mod+parenright { set-column-width "-10%"; }
    Mod+Equal { set-column-width "+10%"; }

    // Finer height adjustments when in column with other windows.
    Mod+Shift+parenright { set-window-height "-10%"; }
    Mod+Shift+Equal { set-window-height "+10%"; }

    // Move the focused window between the floating and the tiling layout.
    Mod+Space       { toggle-window-floating; }
    Mod+Shift+Space { switch-focus-between-floating-and-tiling; }

    // Toggle tabbed column display mode.
    // Windows in this column will appear as vertical tabs,
    // rather than stacked on top of each other.
    Mod+W { toggle-column-tabbed-display; }

    // Actions to switch layouts.
    // Note: if you uncomment these, make sure you do NOT have
    // a matching layout switch hotkey configured in xkb options above.
    // Having both at once on the same hotkey will break the switching,
    // since it will switch twice upon pressing the hotkey (once by xkb, once by niri).
    // Mod+Space       { switch-layout "next"; }
    // Mod+Shift+Space { switch-layout "prev"; }

    Print { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }

    // Applications such as remote-desktop clients and software KVM switches may
    // request that niri stops processing the keyboard shortcuts defined here
    // so they may, for example, forward the key presses as-is to a remote machine.
    // It's a good idea to bind an escape hatch to toggle the inhibitor,
    // so a buggy application can't hold your session hostage.
    //
    // The allow-inhibiting=false property can be applied to other binds as well,
    // which ensures niri always processes them, even when an inhibitor is active.
    Mod+Escape allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }

    // The quit action will show a confirmation dialog to avoid accidental exits.
    Mod+Shift+E { quit; }
    Ctrl+Alt+Delete { quit; }
}
